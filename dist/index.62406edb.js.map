{"mappings":"AAAA,MAAM,kBAAkB,SAAS,cAAc;AAE/C,MAAM,UAAU,SAAU,CAAC;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM;QACpC,WAAW;YACT,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE,GAAG,IAAI;IACT;AACF;AAEA,uCAAuC;AAEvC,uCAAuC;AAEvC,MAAM,gBAAgB,SAAU,QAAQ;IACtC,MAAM,SAAS,CAAC;;;aAGL,EAAE,MAAM;;;EAGnB,CAAC;IACD,SAAS,YAAY;IACrB,SAAS,mBAAmB,cAAc;AAC5C;AACA,MAAM,aAAa;IACjB,IAAI;QACF,MAAM,KAAK,OAAO,SAAS,KAAK,MAAM;QACtC,QAAQ,IAAI;QACZ,IAAI,CAAC,IAAI;QAET,oBAAoB;QACpB,cAAc;QAEd,MAAM,MAAM,MAAM,MAChB;QAIF,MAAM,OAAO,MAAM,IAAI;QACvB,IAAI,CAAC,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE,EAAE,IAAI,OAAO,CAAC,CAAC;QAC9D,IAAI,EAAE,MAAM,EAAE,GAAG,KAAK;QACtB,SAAS;YACP,IAAI,OAAO;YACX,OAAO,OAAO;YACd,WAAW,OAAO;YAClB,WAAW,OAAO;YAClB,OAAO,OAAO;YACd,UAAU,OAAO;YACjB,aAAa,OAAO;YACpB,aAAa,OAAO;QACtB;QACA,QAAQ,IAAI;QAEZ,sBAAsB;QACtB,MAAM,SAAS,CAAC;;cAEN,EAAE,OAAO,MAAM,OAAO,EAAE,OAAO,MAAM;;YAEvC,EAAE,OAAO,MAAM;;;;;;;;;iEASsC,EAAE,OAAO,YAAY;;;;;;;gEAOtB,EAAE,OAAO,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCA4D5C,EAAE,OAAO,UAAU;;;;;YAK7C,EAAE,OAAO,UAAU;;;;;;;;;IAS3B,CAAC;QACD,gBAAgB,sBAAsB,cAAc;IACtD,EAAE,OAAO,OAAO;QACd,MAAM;IACR;AACF;AACA;IAAC;IAAc;CAAO,CAAC,QAAQ,CAAC,KAAO,OAAO,iBAAiB,IAAI;AACnE,OAAO,iBAAiB,cAAc;AACtC,OAAO,iBAAiB,QAAQ","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector(\".recipe\");\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst renderSpinner = function (parentEl) {\n  const markup = `\n  <div class=\"spinner\">\n  <svg>\n  <use href=\"${icons}#icon-loader\"></use>\n  </svg>\n  </div>\n  `;\n  parentEl.innerHTML = \"\";\n  parentEl.insertAdjacentHTML(\"afterbegin\", markup);\n};\nconst showRecipe = async function () {\n  try {\n    const id = window.location.hash.slice(1);\n    console.log(id);\n    if (!id) return;\n\n    // 1) loading recipe\n    renderSpinner(recipeContainer);\n\n    const res = await fetch(\n      \"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886\"\n      // `https://forkify-api.herokuapp.com/api/v2/recipes/${id}`\n      // \"https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bcb6e\"\n    );\n    const data = await res.json();\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n    let { recipe } = data.data;\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n    console.log(recipe);\n\n    // 2) Rendering recipe\n    const markup = `\n    <figure class=\"recipe__fig\">\n    <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n    <h1 class=\"recipe__title\">\n      <span>${recipe.title}</span>\n    </h1>\n  </figure>\n\n  <div class=\"recipe__details\">\n    <div class=\"recipe__info\">\n      <svg class=\"recipe__info-icon\">\n        <use href=\"src/img/icons.svg#icon-clock\"></use>\n      </svg>\n      <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n      <span class=\"recipe__info-text\">minutes</span>\n    </div>\n    <div class=\"recipe__info\">\n      <svg class=\"recipe__info-icon\">\n        <use href=\"src/img/icons.svg#icon-users\"></use>\n      </svg>\n      <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n      <span class=\"recipe__info-text\">servings</span>\n\n      <div class=\"recipe__info-buttons\">\n        <button class=\"btn--tiny btn--increase-servings\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n          </svg>\n        </button>\n        <button class=\"btn--tiny btn--increase-servings\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n          </svg>\n        </button>\n      </div>\n    </div>\n\n    <div class=\"recipe__user-generated\">\n      <svg>\n        <use href=\"src/img/icons.svg#icon-user\"></use>\n      </svg>\n    </div>\n    <button class=\"btn--round\">\n      <svg class=\"\">\n        <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n      </svg>\n    </button>\n  </div>\n\n  <div class=\"recipe__ingredients\">\n    <h2 class=\"heading--2\">Recipe ingredients</h2>\n    <ul class=\"recipe__ingredient-list\">\n      <li class=\"recipe__ingredient\">\n        <svg class=\"recipe__icon\">\n          <use href=\"src/img/icons.svg#icon-check\"></use>\n        </svg>\n        <div class=\"recipe__quantity\">1000</div>\n        <div class=\"recipe__description\">\n          <span class=\"recipe__unit\">g</span>\n          pasta\n        </div>\n      </li>\n\n      <li class=\"recipe__ingredient\">\n        <svg class=\"recipe__icon\">\n          <use href=\"src/img/icons.svg#icon-check\"></use>\n        </svg>\n        <div class=\"recipe__quantity\">0.5</div>\n        <div class=\"recipe__description\">\n          <span class=\"recipe__unit\">cup</span>\n          ricotta cheese\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"recipe__directions\">\n    <h2 class=\"heading--2\">How to cook it</h2>\n    <p class=\"recipe__directions-text\">\n      This recipe was carefully designed and tested by\n      <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n      directions at their website.\n    </p>\n    <a\n      class=\"btn--small recipe__btn\"\n      href=\"${recipe.sourceUrl}\"\n      target=\"_blank\"\n    >\n      <span>Directions</span>\n      <svg class=\"search__icon\">\n        <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n      </svg>\n    </a>\n  </div>\n    `;\n    recipeContainer.insertAdjacentElement(\"afterbegin\", markup);\n  } catch (error) {\n    alert(error);\n  }\n};\n[\"hashchange\", \"load\"].forEach((ev) => window.addEventListener(ev, showRecipe));\nwindow.addEventListener(\"hashchange\", showRecipe);\nwindow.addEventListener(\"load\", showRecipe);\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}